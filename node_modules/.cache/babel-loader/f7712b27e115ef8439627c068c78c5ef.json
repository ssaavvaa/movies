{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ssaavvaa\\\\Desktop\\\\apps for portfolio\\\\Movie-search\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ssaavvaa\\\\Desktop\\\\apps for portfolio\\\\Movie-search\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\ssaavvaa\\\\Desktop\\\\apps for portfolio\\\\Movie-search\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ssaavvaa\\\\Desktop\\\\apps for portfolio\\\\Movie-search\\\\src\\\\pages\\\\MovieDetailPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport stl from '../styles/movie-single.module.css';\nimport axios from 'axios';\nimport { APIkey } from '../helpers';\nimport { Link } from \"react-router-dom\";\nimport CAST from '../components/CAST/index';\nimport REVIEWS from '../components/REVIEWS/index';\nexport default (function (_ref) {\n  var match = _ref.match,\n      location = _ref.location;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      movie = _useState2[0],\n      setMovie = _useState2[1];\n\n  useEffect(function () {\n    var id = match.params.id;\n\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _ref2, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"https://api.themoviedb.org/3/movie/\".concat(id, \"?api_key=\").concat(APIkey));\n\n              case 2:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                setMovie(data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  var _ref3 = movie ? movie : '',\n      id = _ref3.id,\n      backdrop_path = _ref3.backdrop_path,\n      title = _ref3.title,\n      vote_average = _ref3.vote_average,\n      overview = _ref3.overview,\n      genres = _ref3.genres;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, movie && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: stl.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: 'image-movie',\n    src: \"https://image.tmdb.org/t/p/original\".concat(backdrop_path),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, title), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Overview\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, overview), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Jenres\"), genres.map(function (_ref4) {\n    var id = _ref4.id,\n        name = _ref4.name;\n    return React.createElement(\"span\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, name);\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"SCORE\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, vote_average))), React.createElement(\"h2\", {\n    className: stl.additional_Info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Additional information\"), React.createElement(\"div\", {\n    className: stl.addInfoWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/movies/\".concat(id, \"/cast\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"CAST\")), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/movies/\".concat(id, \"/reviews\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"REVIEWS\")))), location.pathname.includes('cast') && React.createElement(CAST, {\n    APIkey: APIkey,\n    id: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), location.pathname.includes('reviews') && React.createElement(REVIEWS, {\n    APIkey: APIkey,\n    id: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["C:/Users/ssaavvaa/Desktop/apps for portfolio/Movie-search/src/pages/MovieDetailPage.js"],"names":["React","useState","useEffect","stl","axios","APIkey","Link","CAST","REVIEWS","match","location","movie","setMovie","id","params","fetchData","get","data","backdrop_path","title","vote_average","overview","genres","wrapper","map","name","additional_Info","addInfoWrapper","pathname","includes"],"mappings":"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","sourcesContent":["import React , { useState , useEffect }  from \"react\";\r\nimport stl from '../styles/movie-single.module.css'\r\nimport axios from 'axios'\r\nimport { APIkey } from '../helpers'\r\nimport { Link } from \"react-router-dom\";\r\nimport CAST from '../components/CAST/index'\r\nimport REVIEWS from '../components/REVIEWS/index'\r\n\r\nexport default ({ match ,  location }) => {\r\n    const [ movie , setMovie ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const { id } = match.params\r\n        async function fetchData() {\r\n            const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${APIkey}`)\r\n            setMovie(data)\r\n          }\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n const { id , backdrop_path , title , vote_average , overview , genres} = movie ? movie : ''\r\n\r\n    return (\r\n        <div>\r\n        {movie && \r\n        <>\r\n            <div className = {stl.wrapper}>\r\n               <img alt = {'image-movie'} src = {`https://image.tmdb.org/t/p/original${backdrop_path}`} />\r\n               <div>\r\n                   <h3>{title}</h3>\r\n                   <h4>Overview</h4>\r\n                   <p>{overview}</p>\r\n                   <h4>Jenres</h4>\r\n                   {genres.map(({ id , name }) => <span key = {id}>{name}</span>)}\r\n                   <h4>SCORE</h4>\r\n                   <p>{vote_average}</p>\r\n               </div>\r\n            </div>\r\n            <h2 className = {stl.additional_Info}>Additional information</h2>\r\n            <div className = {stl.addInfoWrapper}>\r\n                <span><Link to = {`/movies/${id}/cast`}>CAST</Link></span>\r\n                <span><Link to = {`/movies/${id}/reviews`}>REVIEWS</Link></span>\r\n            </div>\r\n            </>\r\n        }\r\n         {location.pathname.includes('cast') && <CAST APIkey = {APIkey} id = {id} /> }\r\n         {location.pathname.includes('reviews') && <REVIEWS APIkey = {APIkey} id = {id} />}\r\n     </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}